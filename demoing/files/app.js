// Generated by CoffeeScript 1.6.2
(function() {
  var myApp;

  myApp = angular.module("myApp", ['gold', 'teamService', 'playerService']);

  myApp.config([
    "$locationProvider", "$routeProvider", function($locationProvider, $routeProvider) {
      var base;

      $locationProvider.html5Mode(true);
      base = '/owd';
      $routeProvider.when("" + base + "/app", {
        templateUrl: "" + base + "/static/files/home.html",
        controller: "HomeCtlr"
      }).when("" + base + "/app/edit", {
        templateUrl: "" + base + "/static/files/edit.html",
        controller: "EditCtlr"
      }).when("" + base + "/app/team", {
        templateUrl: "" + base + "/static/files/team.html",
        controller: "TeamCtlr"
      }).when("" + base + "/app/team/:tid", {
        templateUrl: "" + base + "/static/files/team.html",
        controller: "TeamCtlr"
      }).when("" + base + "/app/player", {
        templateUrl: "" + base + "/static/files/player.html",
        controller: "PlayerCtlr"
      }).when("" + base + "/app/player/:pid", {
        templateUrl: "" + base + "/static/files/player.html",
        controller: "PlayerCtlr"
      }).otherwise({
        redirectTo: "" + base + "/app"
      });
      return true;
    }
  ]);

  myApp.filter('express', function() {
    var suppress;

    suppress = function(input, flag) {
      var output;

      if (!!flag) {
        output = input;
      } else {
        output = null;
      }
      return output;
    };
    return suppress;
  });

  myApp.controller('NavbarCtlr', [
    '$scope', '$routeParams', '$location', '$route', function($scope, $routeParams, $location, $route) {
      var _ref;

      $scope.location = $location;
      $scope.route = $route;
      $scope.winLoc = window.location;
      console.log("NavbarCtlr");
      $scope.alertMsg = '';
      $scope.navActive = {
        'home': 'inactive',
        'edit': 'inactive',
        'team': 'inactive',
        'player': 'inactive'
      };
      if ((_ref = $scope.pathNav) == null) {
        $scope.pathNav = {
          "/app$": "home",
          "/app/edit": "edit",
          "/app/team": "team",
          "/app/player": "player"
        };
      }
      $scope.activateNav = function(nav) {
        var x;

        $scope.navActive[nav] = 'active';
        for (x in $scope.navActive) {
          if (x !== nav) {
            $scope.navActive[x] = 'inactive';
          }
        }
        return true;
      };
      $scope.updateNav = function(newPath, oldPath) {
        var nav, path, _ref1;

        _ref1 = $scope.pathNav;
        for (path in _ref1) {
          nav = _ref1[path];
          if (newPath.match(path) != null) {
            $scope.activateNav(nav);
            return true;
          }
        }
        return true;
      };
      $scope.$watch('location.path()', function(newPath, oldPath) {
        $scope.updateNav(newPath, oldPath);
        return true;
      });
      return true;
    }
  ]);

  myApp.controller('HomeCtlr', [
    '$scope', '$location', '$route', 'TeamService', 'PlayerService', function($scope, $location, $route, TeamService, PlayerService) {
      $scope.$location = $location;
      $scope.$route = $route;
      $scope.location = window.location;
      console.log("HomeCtlr");
      $scope.teams = TeamService.query({
        id: ""
      });
      $scope.players = PlayerService.query({
        id: ""
      });
      return true;
    }
  ]);

  myApp.controller('EditCtlr', [
    '$scope', '$routeParams', '$location', '$route', 'TeamService', 'PlayerService', function($scope, $routeParams, $location, $route, TeamService, PlayerService) {
      $scope.location = $location;
      $scope.route = $route;
      $scope.winLoc = window.location;
      console.log("EditCtlr");
      $scope.errorMsg = "";
      $scope.pid = $routeParams.pid;
      if (!$scope.pid) {
        $scope.pid = 1;
      }
      $scope.defaultTeamValues = {
        tid: null,
        name: null
      };
      $scope.invalidTeam = function(index) {
        var error, key, keys, value, _i, _len, _ref;

        keys = ['name'];
        for (_i = 0, _len = keys.length; _i < _len; _i++) {
          key = keys[_i];
          error = (_ref = $scope.teamsForm["teamForm" + index]) != null ? _ref[key].$error : void 0;
          for (key in error) {
            value = error[key];
            if (value) {
              return true;
            }
          }
        }
        return false;
      };
      $scope.teamOptions = [];
      $scope.updateTeamOptions = function() {
        var team, teamOptions, _i, _len, _ref;

        teamOptions = [
          {
            name: "None",
            tid: null
          }
        ];
        _ref = $scope.teams;
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          team = _ref[_i];
          teamOptions.push({
            name: team.name,
            tid: team.tid
          });
        }
        $scope.teamOptions = teamOptions;
        return true;
      };
      $scope.teams = [];
      $scope.refreshTeams = function() {
        return $scope.teamsRefreshed = TeamService.query({
          id: ""
        }, function(data, headers) {
          console.log("TeamService query success");
          console.log(data);
          console.log(headers());
          $scope.teams = $scope.teamsRefreshed;
          $scope.errorMsg = '';
          $scope.updateTeamOptions();
          return true;
        }, function(response) {
          var _ref, _ref1;

          console.log("TeamService query fail");
          console.log(response);
          console.log((_ref = response.data) != null ? _ref.error : void 0);
          console.log(response.headers());
          $scope.errorMsg = ((_ref1 = response.data) != null ? _ref1.error : void 0) || response.data;
          return true;
        });
      };
      $scope.refreshTeams();
      $scope.createTeam = function() {
        var team;

        team = TeamService.create({}, $scope.defaultTeamValues, function(data, headers) {
          console.log("TeamService create success");
          console.log(data);
          console.log(headers());
          $scope.refreshTeams();
          $scope.errorMsg = "";
          return true;
        }, function(response) {
          var _ref, _ref1;

          console.log("TeamService create fail");
          console.log(response);
          console.log((_ref = response.data) != null ? _ref.error : void 0);
          console.log(response.headers());
          $scope.errorMsg = ((_ref1 = response.data) != null ? _ref1.error : void 0) || response.data;
          return true;
        });
        return true;
      };
      $scope.readTeam = function(team) {
        team = tream.$read({}, function(data, headers) {
          console.log("TeamService read success");
          console.log(data);
          console.log(headers());
          $scope.refreshTeams();
          $scope.errorMsg = "";
          return true;
        }, function(response) {
          var _ref, _ref1;

          console.log("TeamService read fail");
          console.log(response);
          console.log((_ref = response.data) != null ? _ref.error : void 0);
          console.log(response.headers());
          $scope.errorMsg = ((_ref1 = response.data) != null ? _ref1.error : void 0) || response.data;
          return true;
        });
        return true;
      };
      $scope.updateTeam = function(team, index) {
        if ($scope.invalidTeam(index)) {
          return false;
        }
        team.$update({}, function(data, headers) {
          console.log("TeamService update success");
          console.log(data);
          console.log(headers());
          $scope.updateTeamOptions();
          $scope.errorMsg = "";
          return true;
        }, function(response) {
          var _ref, _ref1;

          console.log("TeamService update fail");
          console.log(response);
          console.log((_ref = response.data) != null ? _ref.error : void 0);
          console.log(response.headers());
          $scope.errorMsg = ((_ref1 = response.data) != null ? _ref1.error : void 0) || response.data;
          return true;
        });
        return true;
      };
      $scope.deleteTeam = function(team) {
        var result;

        team = angular.copy(team);
        result = team.$delete({
          id: team.tid
        }, function(data, headers) {
          console.log("TeamService delete success");
          console.log(data);
          console.log(headers());
          $scope.refreshTeams();
          $scope.errorMsg = "";
          return true;
        }, function(response) {
          var _ref, _ref1;

          console.log("TeamService delete fail");
          console.log(response);
          console.log((_ref = response.data) != null ? _ref.error : void 0);
          console.log(response.headers());
          $scope.errorMsg = ((_ref1 = response.data) != null ? _ref1.error : void 0) || response.data;
          return true;
        });
        return true;
      };
      $scope.defaultPlayerValues = {
        pid: null,
        name: "Nobody",
        health: 4,
        skill: 4,
        tid: null
      };
      $scope.invalidPlayer = function(index) {
        var error, key, keys, value, _i, _len, _ref;

        keys = ['name', 'health', 'skill'];
        for (_i = 0, _len = keys.length; _i < _len; _i++) {
          key = keys[_i];
          error = (_ref = $scope.playersForm["playerForm" + index]) != null ? _ref[key].$error : void 0;
          for (key in error) {
            value = error[key];
            if (value) {
              return true;
            }
          }
        }
        return false;
      };
      $scope.refreshPlayers = function() {
        return $scope.playersRefreshed = PlayerService.query({
          id: ""
        }, function(data, headers) {
          console.log("PlayerService query success");
          console.log(data);
          console.log(headers());
          $scope.players = $scope.playersRefreshed;
          $scope.errorMsg = '';
          return true;
        }, function(response) {
          var _ref, _ref1;

          console.log("PlayerService query fail");
          console.log(response);
          console.log((_ref = response.data) != null ? _ref.error : void 0);
          console.log(response.headers());
          $scope.errorMsg = ((_ref1 = response.data) != null ? _ref1.error : void 0) || response.data;
          return true;
        });
      };
      $scope.players = [];
      $scope.refreshPlayers();
      $scope.createPlayer = function() {
        var player;

        player = PlayerService.create({}, $scope.defaultPlayerValues, function(data, headers) {
          console.log("PlayerService create success");
          console.log(data);
          console.log(headers());
          $scope.refreshPlayers();
          $scope.errorMsg = "";
          return true;
        }, function(response) {
          var _ref, _ref1;

          console.log("PlayerService create fail");
          console.log(response);
          console.log((_ref = response.data) != null ? _ref.error : void 0);
          console.log(response.headers());
          $scope.errorMsg = ((_ref1 = response.data) != null ? _ref1.error : void 0) || response.data;
          return true;
        });
        return true;
      };
      $scope.readPlayer = function(player) {
        player = player.$read({}, function(data, headers) {
          console.log("PlayerService read success");
          console.log(data);
          console.log(headers());
          $scope.refreshPlayers();
          $scope.errorMsg = "";
          return true;
        }, function(response) {
          var _ref, _ref1;

          console.log("PlayerService read fail");
          console.log(response);
          console.log((_ref = response.data) != null ? _ref.error : void 0);
          console.log(response.headers());
          $scope.errorMsg = ((_ref1 = response.data) != null ? _ref1.error : void 0) || response.data;
          return true;
        });
        return true;
      };
      $scope.updatePlayer = function(player, index) {
        if ($scope.invalidPlayer(index)) {
          return false;
        }
        player.$update({}, function(data, headers) {
          console.log("PlayerService update success");
          console.log(data);
          console.log(headers());
          $scope.errorMsg = "";
          return true;
        }, function(response) {
          var _ref, _ref1;

          console.log("PlayerService update fail");
          console.log(response);
          console.log((_ref = response.data) != null ? _ref.error : void 0);
          console.log(response.headers());
          $scope.errorMsg = ((_ref1 = response.data) != null ? _ref1.error : void 0) || response.data;
          return true;
        });
        return true;
      };
      $scope.deletePlayer = function(player) {
        var result;

        player = angular.copy(player);
        result = player.$delete({
          id: player.pid
        }, function(data, headers) {
          console.log("PlayerService delete success");
          console.log(data);
          console.log(headers());
          $scope.refreshPlayers();
          $scope.errorMsg = "";
          return true;
        }, function(response) {
          var _ref, _ref1;

          console.log("PlayerService delete fail");
          console.log(response);
          console.log((_ref = response.data) != null ? _ref.error : void 0);
          console.log(response.headers());
          $scope.errorMsg = ((_ref1 = response.data) != null ? _ref1.error : void 0) || response.data;
          return true;
        });
        return true;
      };
      return true;
    }
  ]);

  myApp.controller('TeamCtlr', [
    '$scope', '$routeParams', '$location', '$route', 'TeamService', 'PlayerService', function($scope, $routeParams, $location, $route, TeamService, PlayerService) {
      $scope.location = $location;
      $scope.route = $route;
      $scope.winLoc = window.location;
      console.log("TeamCtlr");
      $scope.errorMsg = '';
      $scope.players = [];
      $scope.tid = $routeParams.tid;
      if (!$scope.tid) {
        $scope.tid = 1;
      }
      $scope.reloadPlayers = function() {
        var pid, player, players, _ref;

        players = [];
        _ref = $scope.team.players;
        for (pid in _ref) {
          player = _ref[pid];
          players.push(player);
        }
        $scope.players = players;
        return true;
      };
      $scope.team = TeamService.get({
        id: $scope.tid
      }, function(data, headers) {
        console.log("TeamService get success");
        console.log(data);
        console.log(headers());
        console.log($scope.team);
        $scope.tid = $scope.team.tid;
        $scope.errorMsg = '';
        $scope.reloadPlayers();
        return true;
      }, function(response) {
        var _ref, _ref1;

        console.log("TeamService get fail");
        console.log(response);
        console.log((_ref = response.data) != null ? _ref.error : void 0);
        console.log(response.headers());
        $scope.errorMsg = ((_ref1 = response.data) != null ? _ref1.error : void 0) || response.data;
        return true;
      });
      return true;
    }
  ]);

  myApp.controller('PlayerCtlr', [
    '$scope', '$routeParams', '$location', '$route', 'TeamService', 'PlayerService', function($scope, $routeParams, $location, $route, TeamService, PlayerService) {
      $scope.location = $location;
      $scope.route = $route;
      $scope.winLoc = window.location;
      console.log("PlayerCtlr");
      $scope.pid = $routeParams.pid;
      if (!$scope.pid) {
        $scope.pid = 1;
      }
      $scope.playerInvalid = function(index) {
        var _ref;

        if ($scope.playersForm["playerForm" + index] == null) {
          console.log("Inner playerForm" + index + " undefined");
        }
        if (!((_ref = $scope.players[index]) != null ? _ref.name : void 0)) {
          return true;
        } else {
          return false;
        }
      };
      $scope.numberInvalid = function(index) {
        var _ref, _ref1, _ref2, _ref3;

        if (((_ref = $scope.numbers[index]) != null ? _ref.use : void 0) && (($scope != null ? (_ref1 = $scope.orderForm["numberForm" + index]) != null ? _ref1.npa.$error.pattern : void 0 : void 0) || ($scope != null ? (_ref2 = $scope.orderForm["numberForm" + index]) != null ? _ref2.nxx.$error.pattern : void 0 : void 0) || ($scope != null ? (_ref3 = $scope.orderForm["numberForm" + index]) != null ? _ref3.xxxx.$error.pattern : void 0 : void 0))) {
          return true;
        } else {
          return false;
        }
      };
      $scope.teamOptions = [];
      $scope.updateTeamOptions = function() {
        var team, teamOptions, _i, _len, _ref;

        teamOptions = [
          {
            name: "None",
            tid: null
          }
        ];
        _ref = $scope.teams;
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          team = _ref[_i];
          teamOptions.push({
            name: team.name,
            tid: team.tid
          });
        }
        $scope.teamOptions = teamOptions;
        return true;
      };
      $scope.teams = TeamService.query({
        id: ""
      }, function(data, headers) {
        console.log("TeamService get success");
        console.log(data);
        console.log(headers());
        console.log($scope.teams);
        $scope.errorMsg = '';
        $scope.updateTeamOptions();
        return true;
      }, function(response) {
        var _ref, _ref1;

        console.log("TeamService get fail");
        console.log(response);
        console.log((_ref = response.data) != null ? _ref.error : void 0);
        console.log(response.headers());
        $scope.errorMsg = ((_ref1 = response.data) != null ? _ref1.error : void 0) || response.data;
        return true;
      });
      $scope.players = PlayerService.query({
        id: ""
      }, function(data, headers) {
        console.log("PlayerService get success");
        console.log(data);
        console.log(headers());
        console.log($scope.players);
        $scope.errorMsg = '';
        return true;
      }, function(response) {
        var _ref, _ref1;

        console.log("PlayerService get fail");
        console.log(response);
        console.log((_ref = response.data) != null ? _ref.error : void 0);
        console.log(response.headers());
        $scope.errorMsg = ((_ref1 = response.data) != null ? _ref1.error : void 0) || response.data;
        return true;
      });
      $scope.player = PlayerService.get({
        id: $scope.pid
      }, function(data, headers) {
        console.log("PlayerService get success");
        console.log(data);
        console.log(headers());
        return console.log($scope.player);
      }, function(response) {
        console.log("PlayerService get fail");
        console.log(response);
        return console.log(response.headers());
      });
      $scope.savePlayer = function(pid) {
        $scope.errored = false;
        $scope.alert = "";
        if ($scope.playerForm.$invalid) {
          $scope.playerForm.$dirty = true;
          $scope.errored = true;
          $scope.alert = "Some values are missing or invalid.";
          return;
        }
        return $scope.player.$put({}, function(data, headers) {
          console.log("PlayerService put success");
          console.log(data);
          return console.log(headers());
        }, function(response) {
          console.log("PlayerService put fail");
          console.log(response);
          return console.log(response.headers());
        });
      };
      return true;
    }
  ]);

}).call(this);
